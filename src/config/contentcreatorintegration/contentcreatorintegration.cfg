# Configuration file

##########################################################################################################
# general
#--------------------------------------------------------------------------------------------------------#
# Full documentation for this mod can be found at: https://content-creator-integration.readthedocs.io 
# This mod is a product of way too many hours of development and testing and is provided free to bridge the gap between content creators and their supporters. Consider donating to the mod author via the CurseForge page!
##########################################################################################################

general {
    # Allow outcomes that require a server to wait until the user connects to a server that allows them to send outcomes? Outcomes are normally discarded otherwise. [default: true]
    B:AllowOutcomesRequiringServerWait=true

    # The sockets we use can be unreliable at times. Turn this on to get toasts about their status and other events. [default: true]
    B:EnableInformationToasts=true

    # Types of log types to write to disk. Putting socket_event in is the only way to see the raw event information (from the log file) as it is not printed to console. Everything else will still be print to console. [default: [cci], [debug], [event], [socket_status], [socket_event]]
    S:LogTypes <
        cci
        debug
        event
        socket_status
        socket_event
     >

    # Maximum amount of automatic reconnects before trying giving up. [range: 0 ~ 20, default: 3]
    I:MaxAutomaticReconnects=3

    # URLs to pull online configs from. These configs will override local configs. [default: ]
    S:OnlineConfigs <
     >

    # Enable local statistics collection? This information is for your own personal reference. None of it will be sent externally. [default: true]
    B:Stats=true

    # Set this if your streamer name is different from your Minecraft name for the $streamer global variable. [default: ]
    S:StreamerName=
}


##########################################################################################################
# socket
#--------------------------------------------------------------------------------------------------------#
# Category for socket tokens. These tokens are more likely than not, sensitive information, so be careful who you show these to.
##########################################################################################################

socket {
    # Mixer channel's chat to listen to. If you know their client ID (a number), put that in instead. You can find out how to find the client ID by going here: https://dev.mixer.com/reference/chat/index.html . Or, to quote: "You can find your channel id by going to https://mixer.com/api/v1/channels/username?fields=id in your browser, replacing 'username' with your Mixer username." [default: ]
    S:MixerChatChannel=

    # JWT Token for StreamElements. To find your JWT token: Go to StreamElements -> Dashboard -> Click on your profile name -> Show secrets [default: ]
    S:StreamElementsJWTToken=

    # Socket Api Token for Streamlabs. Most likely requires a Streamlabs widget to be open when running. I would recommend the event list widget. To find your socket API token: Go to Streamlabs -> Dashboard -> API settings (in left sidebar) -> API Tokens [default: ]
    S:StreamlabsSocketApiToken=

    # Twitch channel's chat to listen to. [default: ]
    S:TwitchChatChannel=
}


