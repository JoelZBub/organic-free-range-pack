# Configuration file

utils {

    sleipnirs_grace {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=20
        D:cap=100.0

        # The Additional Upper Range of Required Levels
        I:cost_limit=75

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >
        D:max=100.0

        # Maximum Enchantment Level
        I:max_level=10

        # Minimum Enchantment Level
        I:min_level=1
        D:path_bonus=5.0

        # Increase of levels per Enchantment Level
        I:per_level_cost=14

        # Rarity of the Enchantment
        I:rarity=2
        D:speed_gain=1.0

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    famines_odium {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=10

        # The Additional Upper Range of Required Levels
        I:cost_limit=40
        D:damage=0.00625
        I:delay=1200

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=2

        # Minimum Enchantment Level
        I:min_level=1
        D:nourishment=0.2

        # Increase of levels per Enchantment Level
        I:per_level_cost=4

        # Rarity of the Enchantment
        I:rarity=1

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    thick_pick {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=26

        # The Additional Upper Range of Required Levels
        I:cost_limit=75

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >
        S:items <
            minecraft:diamond;5
         >

        # Maximum Enchantment Level
        I:max_level=2

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=4

        # Rarity of the Enchantment
        I:rarity=2
        D:speed_base=2.25
        D:speed_level=1.25

        # If the Enchantment is a Treasure
        B:treasure=false
    }

    rocketman {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=25

        # The Additional Upper Range of Required Levels
        I:cost_limit=20
        D:duration_base=0.05
        D:duration_level=0.15

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=3

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=4

        # Rarity of the Enchantment
        I:rarity=3

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    climber {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=14
        S:climb_speed <
            minecraft:ladder;2
            minecraft:vine;5
         >

        # The Additional Upper Range of Required Levels
        I:cost_limit=30
        I:default_delay=5

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
            uniquee:swift
         >

        # Maximum Enchantment Level
        I:max_level=3
        I:min_delay=10

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=8

        # Rarity of the Enchantment
        I:rarity=1

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    phanes_regret {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=10
        D:chance=0.125

        # The Additional Upper Range of Required Levels
        I:cost_limit=75

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=2

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=2

        # Rarity of the Enchantment
        I:rarity=1

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    mounting_aegis {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=24

        # The Additional Upper Range of Required Levels
        I:cost_limit=20

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=1

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=4

        # Rarity of the Enchantment
        I:rarity=2

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    demeters_blessing {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=12

        # The Additional Upper Range of Required Levels
        I:cost_limit=75

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
            uniqueeutil:demeters_soul
         >

        # Maximum Enchantment Level
        I:max_level=2

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=8

        # Rarity of the Enchantment
        I:rarity=3

        # If the Enchantment is a Treasure
        B:treasure=false
    }

    demeters_soul {
        # If the Enchantment has any effect
        B:activated=true
        D:base_cap=0.9

        # Minimum Level for Enchanting
        I:base_cost=20

        # The Additional Upper Range of Required Levels
        I:cost_limit=40
        I:crop_cap_base=25
        I:crop_cap_level=10
        I:delay=20

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=3

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=10

        # Rarity of the Enchantment
        I:rarity=3

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    ambrosia {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=8

        # The Additional Upper Range of Required Levels
        I:cost_limit=10

        # If the Enchantment is Obtainable
        B:enabled=true

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=4

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=12

        # Rarity of the Enchantment
        I:rarity=2

        # If the Enchantment is a Treasure
        B:treasure=true
    }

    essence_of_slime {
        # If the Enchantment has any effect
        B:activated=true

        # Minimum Level for Enchanting
        I:base_cost=15

        # The Additional Upper Range of Required Levels
        I:cost_limit=10
        D:durability_loss=3.0

        # If the Enchantment is Obtainable
        B:enabled=true
        D:fall_distance_multiplier=3.0

        # Hard Limit of where the Enchantment will be capped even if the level is higher
        I:hard_cap=100

        # Enchantments that are not compatible with this Enchantment
        S:incompats <
         >

        # Maximum Enchantment Level
        I:max_level=5

        # Minimum Enchantment Level
        I:min_level=1

        # Increase of levels per Enchantment Level
        I:per_level_cost=5

        # Rarity of the Enchantment
        I:rarity=3

        # If the Enchantment is a Treasure
        B:treasure=true
    }

}


